apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus
    name: prometheus-deployment
    plugin: prometheus
  name: prometheus
  namespace: kube-system
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      plugin: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        plugin: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yaml
        - --query.max-concurrency=100
        - --query.timeout=10s
        - --storage.tsdb.path=/prometheus/data
        - --storage.tsdb.retention=24h
        - --web.enable-lifecycle
        command:
        - /bin/prometheus
        image: 192.168.1.52/tenx_containers/prometheus:v2.1.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus_rules
          name: rules-volume
        - mountPath: /etc/prometheus
          name: config-volume
        - mountPath: /prometheus/data
          name: data-volume
        - mountPath: /etc/localtime
          name: tenxcloud-time-localtime
          readOnly: true
        - mountPath: /etc/timezone
          name: tenxcloud-time-zone
          readOnly: true
      - args:
        - 'while inotifywait -qq -e modify,create,delete /etc/prometheus_rules/..data/;
          do sh -c  "curl -X POST http://localhost:9090/-/reload"; done; '
        image: 192.168.1.52/tenx_containers/inotify:1.0
        imagePullPolicy: IfNotPresent
        name: notify
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus_rules
          name: rules-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-rules
        name: rules-volume
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: config-volume
      - hostPath:
          path: /etc/localtime
          type: ""
        name: tenxcloud-time-localtime
      - hostPath:
          path: /tenxcloud/prometheus_data
          type: ""
        name: data-volume
      - hostPath:
          path: /etc/timezone
          type: ""
        name: tenxcloud-time-zone
